<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd">
    
     
     <!-- 自定义filter -->
    <bean class="com.xhkj.upms.shiro.RolesOrFilter" id="rolesOrFilter" />
    
    <!-- test Shiro过滤器 核心 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
    	<!-- 配置 securityManager对象 Shiro的核心安全接口,这个属性是必须的-->
    	<property name="securityManager" ref="securityManager" />
    	<!-- 登录页URL 身份认证失败，则跳转到登录页面的配置 -->
    	<property name="loginUrl" value="/login.html" />
    	<!-- 未认证跳转页面  权限认证失败，则跳转到指定页面-->
    	<property name="unauthorizedUrl" value="403.html"></property>
    	<!-- 过滤器链 -->
    	<property name="filterChainDefinitions">
    	        <!--anon 表示不需要认证以及授权-->
                <!--authc 表示需要认证 没有登录是不能进行访问的-->
                <!--perms 表示需要该权限才能访问的页面 /user/* = perms[/*] -->
                <!--roles 表示需要角色才能访问的页面 /* = roles[管理员]-->
                <!-- “/** = user”表示访问该地址的用户是身份验证通过或RememberMe登录的都可以。 -->
    		<value>
    			/login.html=anon
    			/register.html=anon
    			/user/login=anon
    			/user/testRole2=roleOrs["admin","admin1"]
    			/user/testRole3=roleOrs["user","admin1"]
    			/*=authc
    		</value>
    	</property>
    	<!-- 自定义拦截器引入shiro -->
    	<property name="filters">
    		<map>
    			<entry key="roleOrs" value-ref="rolesOrFilter" />
    		</map>
    	</property>
    </bean>
    
        <!-- 自定义Realm -->
    <bean id="MyRealm" class="com.xhkj.sso.shiro.CustomRealm">
    	<property name="credentialsMatcher" ref="credentialsMatcher" />
    </bean>
    
        <!-- 密码加密 -->
    <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
    	<property name="hashAlgorithmName" value="md5" />
    	<property name="hashIterations" value="1" />
    </bean>
    
    
    <!-- test shiro 1 创建SecurityManager对象 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
    	<property name="realm" ref="MyRealm" />
    	<!-- session增删改查操作通过redis session dao来实现 -->
    	<property name="sessionManager" ref="sessionManager" /> 
    	
    	<!-- 引入redis缓存 角色 权限数据 -->
    	<property name="cacheManager" ref="redisCacheManager" />
    	
    	<!-- 重点:引入cookie管理器 管理自动动力 -->
    	<property name="rememberMeManager" ref="cookieRememberMeManager" />
    	
    </bean>
    
    
    <!-- 修改 org.apache.shiro.web.session.mgt.DefaultWebSessionManager 为自定义 CustomSessionManager -->
    <bean class="com.xhkj.sso.shiro.CustomSessionManager" id="sessionManager">
    	<property name="sessionDAO" ref="redisSessionDao" />
    	<!-- 设置全局会话超时时间,默认30分钟(1800000) -->
    	<property name="globalSessionTimeout" value="1800000" />
    	<!-- 是否在会话过期后调用SessionDAO的delete方法删除会话 默认true -->
		<property name="deleteInvalidSessions" value="false" />
		<!-- 是否开启会话验证器任务 默认true -->
		<property name="sessionValidationSchedulerEnabled" value="false"/>
		<!-- 会话验证器调度时间 -->
		<property name="sessionValidationInterval" value="1800000"/>
		<property name="sessionFactory" ref="shiroSessionFactory"/>
		<!-- 默认JSESSIONID，同tomcat/jetty在cookie中缓存标识相同，修改用于防止访问404页面时，容器生成的标识把shiro的覆盖掉 -->
		<!-- <property name="sessionIdCookie">
			<bean class="org.apache.shiro.web.servlet.SimpleCookie">
				<constructor-arg name="name" value="SHRIOSESSIONID"/>
			</bean>
		</property>	 -->	
		<property name="sessionListeners">
			<list>
				<bean class="com.xhkj.sso.shiro.ShiroSessionListener"/>
			</list>
		</property>


    </bean> 
    
    <!-- redis缓存管理 -->
	<bean class="com.xhkj.sso.shiro.RedisCacheManager" id="redisCacheManager"/>   
	
	
	<!-- 自动登录相关 -->
    <bean class="org.apache.shiro.web.mgt.CookieRememberMeManager" id="cookieRememberMeManager" >
			<property name="cookie" ref="cookie" />
			<property name="cipherKey" value="#{T(org.apache.shiro.codec.Base64).decode('25BsmdYwjnfcWmnhAciDDg==')}" />
    </bean>
    
    <bean class="org.apache.shiro.web.servlet.SimpleCookie" id="cookie">
    
    	<!-- 设置cookie名称 -->
    	<constructor-arg  value="rememberMe" />
    	
    	<property name="httpOnly" value="true"/>
    	<!-- cookie最大存活时间 -->
        <property name="maxAge" value="604800"/><!-- 7天 -->
    </bean>
    
      <bean class="com.xhkj.sso.shiro.RedisCache" id="redisCache" />
    
    <bean class="redis.clients.jedis.JedisPoolConfig" id="jedisPoolConfig" />
    
    <bean class="com.xhkj.sso.shiro.RedisSessionDao" id="redisSessionDao" />
    
    <!-- shiro redis start -->
   <bean id="shiroSessionFactory" class="com.xhkj.sso.shiro.ShiroSessionFactory" />
    
    
   
</beans>